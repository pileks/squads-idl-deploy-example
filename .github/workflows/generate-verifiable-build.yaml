# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: generate-verifiable-build
on:
  workflow_dispatch:
    inputs:
      program:
        required: true
        type: string
        description: "The program to generate a verifiable build for"
        default: "idl_example"
      program-id:
        required: true
        type: string
        description: "The program id of the program we are uploading"
        default: "1337wNtnZnGMvdKPBT1cUXfZnhvUgWv73fzUviMLj8x6"
      program-executable-data:
        required: true
        type: string
        description: "The program executable data address"
        default: "H5rxQS4BGc77552Da6aDDNH2G7HCpC1fUxyeuDpwEQK4"
      multisig-pda:
        required: true
        type: string
        description: "The multisig pda to which the vault belongs"
        default: "J5wHJwmkyhx1rnn7xeYyUVKYgCvDPwGJz4h44WE6cHCJ"
      multisig-vault-index:
        required: true
        type: string
        description: "Index of the multisig vault executing the upgrade"
        default: "0"
      multisig-vault-address:
        required: true
        type: string
        description: "Address of the multisig vault executing the upgrade"
        default: "ALxsUozu7d8ibng4k3aF9CPj1VGPGt8ZRogbpUwYsZkq"
      spill-address:
        required: true
        type: string
        description: "Spill address to recoup funds from buffers"
        default: "2SG7fCnreQ9wHoqQC7U6pfDN2rYmBqExKuqcGR3StrZW"
      anchor-version:
        required: true
        type: string
        default: "0.29.0"
        description: "The anchor version to use"
      solana-cli-version:
        required: true
        type: string
        default: "2.1.14"
        description: "The solana cli version to use"
      network:
        required: true
        type: string
        default: "devnet"
        description: "The network to use"
      endpoint:
        required: true
        type: string
        default: "https://api.devnet.solana.com"
        description: "The endpoint to use"

jobs:
  generate-verifiable-idl_example:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    outputs:
      buffer: ${{ steps.deploy-verifiable-buffer.outputs.buffer }}
      idl-buffer: ${{ steps.deploy-verifiable-buffer.outputs.idl-buffer }}
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/anchor-verifiable-build
        with:
          program: idl_example
          anchor-version: '0.29.0'
          solana-cli-version: '2.1.14'
      - run: 'git pull --rebase'
      - run: mkdir -p verifiable-builds
      - run: cp target/deploy/idl_example.so ./verifiable-builds/idl_example.so
      - run: cp target/idl/idl_example.json ./verifiable-builds/idl_example.json
      - name: Commit verifiable build back to mainline
        uses: EndBug/add-and-commit@v9.1.4
        with:
          default_author: github_actions
          message: 'Update idl_example verifiable build'
      - name: Deploy verifiable build buffer and IDL
        id: deploy-verifiable-buffer
        uses: ./.github/actions/deploy-verifiable-buffer
        with:
          network: ${{ inputs.network }}
          keypair: ${{ secrets.DEPLOY_KEYPAIR }}
          program: ${{ inputs.program }}
          program-id: ${{ inputs.program-id }}
          buffer-authority: ${{ inputs.multisig-vault-address }}
          anchor-version: ${{ inputs.anchor-version }}
          node-version: '20.16.0'
      - name: Log buffer and IDL addresses
        run: |
          echo "Buffer address: ${{ steps.deploy-verifiable-buffer.outputs.buffer }}"
          echo "IDL address: ${{ steps.deploy-verifiable-buffer.outputs.idl-buffer }}"
  upload-verifiable-idl_example:
    runs-on: ubuntu-22.04
    needs: generate-verifiable-idl_example
    steps:
      - name: Log buffer and IDL addresses
        run: |
          echo "Buffer address: ${{ needs.generate-verifiable-idl_example.outputs.buffer }}"
          echo "IDL address: ${{ needs.generate-verifiable-idl_example.outputs.idl-buffer }}"
      - name: Set upgrade authority to Squads multisig
        uses: pileks/squads-v4-program-upgrade@0.0.3
        with:
          network-url: ${{ inputs.endpoint }}
          multisig-pda: ${{ inputs.multisig-pda }}
          multisig-vault-index: ${{ inputs.multisig-vault-index }}
          program-id: ${{ inputs.program-id }}
          buffer: "${{ needs.generate-verifiable-idl_example.outputs.buffer }}"
          spill-address: ${{ inputs.spill-address }}
          name: "Test Upgrade"
          executable-data: ${{ inputs.program-executable-data }}
          keypair: ${{ secrets.DEPLOY_KEYPAIR }}
          idl-buffer: "${{ needs.generate-verifiable-idl_example.outputs.idl-buffer }}"